version: '1.0.0'

networks:
  poll-tier:
  result-tier:
  back-tier:

volumes:
  db-data:

services:
  poll:
    build:
      context: ./poll
    depends_on:
      redis:
        condition: service_started
    ports:
      - "5000:80"
    environment:
      - REDIS_HOST=redis
    networks:
      - poll-tier
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - poll-tier
      - back-tier
  worker:
    build:
      context: ./worker
    depends_on:
      db:
        condition: service_started
        restart: true
      redis:
        condition: service_started
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
    networks:
      - back-tier
  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
    networks:
      - result-tier
      - back-tier
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
  result:
    build:
      context: ./result
    depends_on:
      db:
        condition: service_started
        restart: true
    ports:
      - "5001:80"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
    networks:
      - result-tier
